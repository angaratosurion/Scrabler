//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.225
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ScrablerScriptsRunner.ScrablerService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://ScrablerService", ConfigurationName="ScrablerService.IScrablerService")]
    public interface IScrablerService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ScrablerService/IScrablerService/GetServiceVersion", ReplyAction="http://ScrablerService/IScrablerService/GetServiceVersionResponse")]
        string GetServiceVersion();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ScrablerService/IScrablerService/createScriptsDirectory", ReplyAction="http://ScrablerService/IScrablerService/createScriptsDirectoryResponse")]
        void createScriptsDirectory(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ScrablerService/IScrablerService/Autoexecutescripts", ReplyAction="http://ScrablerService/IScrablerService/AutoexecutescriptsResponse")]
        void Autoexecutescripts(string username, int version);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ScrablerService/IScrablerService/Executescript", ReplyAction="http://ScrablerService/IScrablerService/ExecutescriptResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Scrabler.ScriptInfo[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Scrabler.ScriptInfo))]
        object Executescript(string file);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ScrablerService/IScrablerService/GetLoadedScripts", ReplyAction="http://ScrablerService/IScrablerService/GetLoadedScriptsResponse")]
        Scrabler.ScriptInfo[] GetLoadedScripts();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IScrablerServiceChannel : ScrablerScriptsRunner.ScrablerService.IScrablerService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ScrablerServiceClient : System.ServiceModel.ClientBase<ScrablerScriptsRunner.ScrablerService.IScrablerService>, ScrablerScriptsRunner.ScrablerService.IScrablerService {
        
        public ScrablerServiceClient() {
        }
        
        public ScrablerServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ScrablerServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ScrablerServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ScrablerServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetServiceVersion() {
            return base.Channel.GetServiceVersion();
        }
        
        public void createScriptsDirectory(string username) {
            base.Channel.createScriptsDirectory(username);
        }
        
        public void Autoexecutescripts(string username, int version) {
            base.Channel.Autoexecutescripts(username, version);
        }
        
        public object Executescript(string file) {
            return base.Channel.Executescript(file);
        }
        
        public Scrabler.ScriptInfo[] GetLoadedScripts() {
            return base.Channel.GetLoadedScripts();
        }
    }
}
